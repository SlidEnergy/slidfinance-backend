// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyFinanceServer.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MyFinanceServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190117125032_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("MyFinanceServer.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Balance");

                    b.Property<int>("BankId");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 0f,
                            BankId = 1,
                            Title = "Карта Польза"
                        },
                        new
                        {
                            Id = 2,
                            Balance = 0f,
                            BankId = 2,
                            Title = "Карта Отличная"
                        },
                        new
                        {
                            Id = 3,
                            Balance = 0f,
                            BankId = 3,
                            Title = "Общий счет"
                        },
                        new
                        {
                            Id = 4,
                            Balance = 0f,
                            BankId = 4,
                            Title = "Карта Тинькофф блэк"
                        });
                });

            modelBuilder.Entity("MyFinanceServer.Models.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Banks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "HomeCreditBank",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Title = "RgsBank",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Title = "VostBank",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Title = "TinkoffBank",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("MyFinanceServer.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Продукты",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Title = "Развлечения и спонтанные покупки",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Title = "Бензин",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Title = "Разное",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Title = "Настя разное",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            Title = "Миша разное",
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            Title = "Аня разное",
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            Title = "Быстринская (ипотека и комуналка)",
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            Title = "Телефон и интернет (мой, Настен, домашний)",
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            Title = "Спорт",
                            UserId = 1
                        },
                        new
                        {
                            Id = 11,
                            Title = "Столовка",
                            UserId = 1
                        },
                        new
                        {
                            Id = 12,
                            Title = "Разное (смс-банки)",
                            UserId = 1
                        },
                        new
                        {
                            Id = 13,
                            Title = "Квартира (налог и страховка)",
                            UserId = 1
                        },
                        new
                        {
                            Id = 14,
                            Title = "Налоги ИП и фиксированные взносы",
                            UserId = 1
                        },
                        new
                        {
                            Id = 15,
                            Title = "Машина (налог и страховка)",
                            UserId = 1
                        },
                        new
                        {
                            Id = 16,
                            Title = "Машина",
                            UserId = 1
                        },
                        new
                        {
                            Id = 17,
                            Title = "Праздники и подарки",
                            UserId = 1
                        },
                        new
                        {
                            Id = 18,
                            Title = "Обучение",
                            UserId = 1
                        },
                        new
                        {
                            Id = 19,
                            Title = "Здоровье",
                            UserId = 1
                        },
                        new
                        {
                            Id = 20,
                            Title = "Путешествие",
                            UserId = 1
                        },
                        new
                        {
                            Id = 21,
                            Title = "ДБедного",
                            UserId = 1
                        },
                        new
                        {
                            Id = 22,
                            Title = "Курочка",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("MyFinanceServer.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountId");

                    b.Property<float>("Amount");

                    b.Property<int?>("CategoryId");

                    b.Property<DateTime>("DateTime");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("MyFinanceServer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "slidenergy@gmail.com",
                            Password = "slider123"
                        });
                });

            modelBuilder.Entity("MyFinanceServer.Models.Account", b =>
                {
                    b.HasOne("MyFinanceServer.Models.Bank", "Bank")
                        .WithMany("Accounts")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyFinanceServer.Models.Bank", b =>
                {
                    b.HasOne("MyFinanceServer.Models.User", "User")
                        .WithMany("Banks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyFinanceServer.Models.Category", b =>
                {
                    b.HasOne("MyFinanceServer.Models.User", "User")
                        .WithMany("Categories")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MyFinanceServer.Models.Transaction", b =>
                {
                    b.HasOne("MyFinanceServer.Models.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyFinanceServer.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
